//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 31/12/2008 12:23:27
// This source code was auto-generated by NHQG (NHQG), Version 2.0.0.0.
// 
namespace Query {
    using NHibernate = global::NHibernate;
    
    
    public partial class Where {
        
        /// <summary>
        /// Query helper for member Where.Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public static Root_Query_Navigation Navigation {
            get {
                return new Root_Query_Navigation();
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Query_Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public partial class Query_Navigation<T1> : QueryBuilder<T1>
         {
            
            /// <summary>
            /// Query helper for member Query_Navigation..ctor
            /// </summary>
            public Query_Navigation() : 
                    this(null, "this", null) {
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation..ctor
            /// </summary>
            public Query_Navigation(QueryBuilder<T1> parent, string name, string associationPath) : 
                    base(parent, name, associationPath) {
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation..ctor
            /// </summary>
            public Query_Navigation(QueryBuilder<T1> parent, string name, string associationPath, bool backTrackAssociationOnEquality) : 
                    base(parent, name, associationPath, backTrackAssociationOnEquality) {
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Name {
                get {
                    string temp = associationPath;
                    PropertyQueryBuilder<T1> child = new PropertyQueryBuilder<T1>(null, "Name", temp);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Link {
                get {
                    string temp = associationPath;
                    PropertyQueryBuilder<T1> child = new PropertyQueryBuilder<T1>(null, "Link", temp);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual PropertyQueryBuilder<T1> Order {
                get {
                    string temp = associationPath;
                    PropertyQueryBuilder<T1> child = new PropertyQueryBuilder<T1>(null, "Order", temp);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual IdQueryBuilder<T1> Id {
                get {
                    string temp = associationPath;
                    IdQueryBuilder<T1> child = new IdQueryBuilder<T1>(null, "Id", temp);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual Query_Navigation<T1> ParentNode {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "ParentNode");
                    Query_Navigation<T1> child = new Query_Navigation<T1>(null, "ParentNode", temp, true);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
            
            /// <summary>
            /// Query helper for member Query_Navigation.
            /// </summary>
            public virtual Query_NavigationType<T1> NavigationType {
                get {
                    string temp = associationPath;
                    temp = ((temp + ".") 
                                + "NavigationType");
                    Query_NavigationType<T1> child = new Query_NavigationType<T1>(null, "NavigationType", temp, true);
                    child.ShouldSkipJoinOnIdEquality = this.ShouldSkipJoinOnIdEquality;
                    return child;
                }
            }
        }
        
        /// <summary>
        /// Query helper for member Where.Root_Query_Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public partial class Root_Query_Navigation : Query_Navigation<Membrane.Models.NavigationManagement.Navigation> {
        }
    }
    
    public partial class OrderBy {
        
        /// <summary>
        /// Query helper for member OrderBy.Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public partial class Navigation {
            
            /// <summary>
            /// Query helper for member Navigation.Name
            /// </summary>
            public static OrderByClause Name {
                get {
                    return new OrderByClause("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Link
            /// </summary>
            public static OrderByClause Link {
                get {
                    return new OrderByClause("Link");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Order
            /// </summary>
            public static OrderByClause Order {
                get {
                    return new OrderByClause("Order");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Id
            /// </summary>
            public static OrderByClause Id {
                get {
                    return new OrderByClause("Id");
                }
            }
        }
    }
    
    public partial class ProjectBy {
        
        /// <summary>
        /// Query helper for member ProjectBy.Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public partial class Navigation {
            
            /// <summary>
            /// Query helper for member Navigation.Name
            /// </summary>
            public static PropertyProjectionBuilder Name {
                get {
                    return new PropertyProjectionBuilder("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Link
            /// </summary>
            public static PropertyProjectionBuilder Link {
                get {
                    return new PropertyProjectionBuilder("Link");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Order
            /// </summary>
            public static NumericPropertyProjectionBuilder Order {
                get {
                    return new NumericPropertyProjectionBuilder("Order");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Id
            /// </summary>
            public static NumericPropertyProjectionBuilder Id {
                get {
                    return new NumericPropertyProjectionBuilder("Id");
                }
            }
        }
    }
    
    public partial class GroupBy {
        
        /// <summary>
        /// Query helper for member GroupBy.Navigation
        /// </summary>
        [System.CLSCompliantAttribute(false)]
        public partial class Navigation {
            
            /// <summary>
            /// Query helper for member Navigation.Name
            /// </summary>
            public static NHibernate.Criterion.IProjection Name {
                get {
                    return NHibernate.Criterion.Projections.GroupProperty("Name");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Link
            /// </summary>
            public static NHibernate.Criterion.IProjection Link {
                get {
                    return NHibernate.Criterion.Projections.GroupProperty("Link");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Order
            /// </summary>
            public static NHibernate.Criterion.IProjection Order {
                get {
                    return NHibernate.Criterion.Projections.GroupProperty("Order");
                }
            }
            
            /// <summary>
            /// Query helper for member Navigation.Id
            /// </summary>
            public static NHibernate.Criterion.IProjection Id {
                get {
                    return NHibernate.Criterion.Projections.GroupProperty("Id");
                }
            }
        }
    }
}
